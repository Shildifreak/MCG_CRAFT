#* encoding: utf-8 *#

import pydoc
import sys

h = pydoc.HTMLDoc()

import re

def filtertext(text):
    text = "<!DOCTYPE html>\n"+text
    text = text.replace("ä","&auml;")
    text = text.replace("ö","&ouml;")
    text = text.replace("ü","&uuml;")
    text = text.replace("Ä","&Auml;")
    text = text.replace("Ö","&Ouml;")
    text = text.replace("Ü","&Uuml;")
    text = text.replace("ß","&szlig;")
    text = text.replace("__builtin__.object","object")
    text = text.replace("__builtin__.tuple","tuple")
    text = text.replace("<dl><dt><strong>__dict__</strong></dt>\n<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dd>\n</dl>","")
    text = text.replace("<dl><dt><strong>__weakref__</strong></dt>\n<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dd>\n</dl>","")
    text = text.replace('<dl><dt><strong>altered</strong> = False</dl>\n\n<dl><dt><strong>blockformat</strong> = \'H\'</dl>\n\n<dl><dt><strong>byte_per_block</strong> = 2</dl>',"")
    for end in ("<hr>","</td>"):
        text = re.sub("<hr>\s*Data descriptors defined here:<br>\s*%s" %end,end,text) #leere Data descriptor Zeilen löschen
        text = re.sub("<hr>\s*Data descriptors inherited from .*:<br>\s*%s" %end,end,text) #leere inherited from Zeilen löschen
        text = re.sub("<hr>\s*Data and other attributes inherited from .*:<br>\s*%s" %end,end,text)
    text = re.sub("<dl><dt>Method resolution order:</dt>\s*(<dd>.*</dd>\s*)*</dl>\s*<hr>","",text)
    # Datenbereich handgeschneidert:
    data = "<strong>BLOCK_ID_BY_NAME</strong>[\"blockname\"] <tt> get block id for name</tt><br>\n"+\
           "<strong>BLOCK_NAME_BY_ID</strong>[id] <tt> get name for block id</tt><br>\n"+\
           "lists are autogenerated from textureinfo (see Game)"
    #text = re.sub("<big><strong>Data</strong></big></font></td></tr>\s*.*\s*(.*<br>\s)*.*</td>","<big><strong>Data</strong></big></font></td></tr>\n<tr><tr><td bgcolor=\"#55aa55\"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td><td width=\"100%\">"+data+"</td>",text)
    return text

sys.path.append("../../..")
import voxelengine
with open("voxelengine.html","w") as f:
    print >> f, filtertext(h.docmodule(voxelengine))

sys.path.append("../../modules")
import shared
with open("shared.html","w") as f:
    print >> f, filtertext(h.docmodule(shared))