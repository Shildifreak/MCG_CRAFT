
all messages are json encoded lists with the first element being the command type

server -> client
	clear generator_data
		lösche alle Blöcke, gecachten Blöcke und Entities
		setze monitored area und monitor id zurück
		setze Position des Spielers auf unbekannt, initialisiere neuen terrain generator
		HUD wird NICHT gecleared!
	set <x y z> block
		setze block an stelle x y z
	goto <x y z>
		setze Kameraposition, starte Neuberechnung von monitored area
	focusdist n
		setze Distanz bis zu der Blöcke anvisiert werden
	setentity uid model_id <x y z> <yaw pitch> modelmaps
		zeige/update Entity
	delentity uid
		lösche Entity
	sethud uid texture <x y z> rotation <w h> align
		zeige HUD Element
		anklickbar wenn id mit # beginnt
	delhud uid
		lösche HUD Element
	focushud
		bringe Client in Mausmodus
	error <some msg> <fatality>
		Client hat irgendwas falsch gemacht
		fatality: False -> just display and move on, True -> shutdown/reconnect

	deprecated
		del <x y z>
			lösche den Block -> nutze stattdessen set

	concept, work in progress
		setarea <xmin ymin zmin> <xmax ymax zmax> block bitmap
			setzt block an alle Stellen im Gebiet für die im bitmap eine 1 steht
			i = (z-zmin)*dy*dx + (y-ymin)*dx + (x-xmin)
			bitmap[i//8] == (1<<(i%8))
		delarea <xmin ymin zmin> <xmax ymax zmax>
			setzt alle Blöcke in dem Gebiet auf ihren Wert in der Terrainfunktion zurück

client -> server
	tick
	
	control entity_id password
		to create temporary entity prefix entity_id with "tmp:"
	
	monitor <x_min y_min z_min> <x_max y_max z_max> m_id
	
	update <x_min y_min z_min> <x_max y_max z_max> m_id
	
	rot <yaw pitch>
	
	keys states
		states: base64 encoded bytearray containing state of each action (0 not pressed .. 255 completely pressed)
		(trailing zero bytes are allowed to be stripped)
	
	clicked button hud_element_id
		button: left, right
	
	dragged button from_hud_element_id to_hud_element_id
	
	press key
		causes a key press event for this key (only recognizable with was_pressed, not is_pressed)
		currently used for inv, chat_close and all actions caused by mouse_scroll events
	
	text msg
		Nutzereingabe im Chat


Ablauf:

	Local Network Server Discovery
		client		broadcast	server:discovery_port
			----- ping parole   ---->
			<---- pong httpport -----

	Metadata Fetching
		client					server:http
			----- get /info.json---->
			<---- http response -----

	Joining a Game
		client					server:game
			----- connect ---->
			<---- accept  -----
			
			----- control ---->
			<---- clear   -----
			<---- goto    -----
			----- monitor ---->
			----- update  ---->
			<---- set     -----
			      ...

Message Groups:
	The order of messages in regard to control messages has to remain as is, however:

	Messages in different normal groups don't have to wait for each other.
	Messages in the same group can sometimes be merged (eg. by dropping earlier one)
